


# Popsize ABC Installation
  popsizeBinFolder=/home/users/long/Wildebeest/PopsizeABC/bin/
  mkdir $popsizeBinFolder
  cd $popsizeBinFolder
  #download files from https://forge-dga.jouy.inra.fr/projects/popsizeabc/files
	unzip 'comp_stat1.2.zip'
	unzip 'estim.zip'

# 1 and 2:
#	One for one pop, at least 10 samples each pop. High depth is more safe for SFS inference.
#	py2

# 3 and 4:
#	One for one pop
#	R, library('abc') required. 
#		Liam is generous: /home/quinn/programs/R/R-3.6.3/bin/R



#1. step1: Compute observed summary statistics. 
#   Your script has to be under the same folder as 'gwas'
   
	ln -s $popsizeBinFolder/comp_stat1/gwas ./
	cp $popsizeBinFolder/comp_stat1/stat_from_vcf_ex1.py ./step1.Somename.py
#	Change values for:
# line 28: 'pop', 
# line 29: 'list_ani', 
# line 31: 'mac', 10% threshold?
# line 32: 'mac_ld', 20% threshold?
# line 89: range for chro, 
# line 92: 'infile_vcf', each chromosome in vcf bgz format.  For how to prepare vcf files, see Liam's guide slides: https://docs.google.com/presentation/d/1uFi5R_B2nYghufSsgh6h7IEyvwpCqvZn0sdPcCYZwTE/edit?usp=sharing
# line 94: ped file
# line 129: output for 'np.savetxt'
#	Mkdir result folder if it doesn't exist.
  python2 ./step1.Somename.py


#2. step2: Simulate summary statistics.
#   The script has to be under the same folder as 'popgen_abc.py'

	ln -s $popsizeBinFolder/comp_stat1/popgen_abc.py ./
	cp $popsizeBinFolder/comp_stat1/simul_data_ex1.py ./step2.Somename.py
#	Change values for:
# line 38: 'outfile_name',
# line 39: 'nb_rep', 30000?
# line 40: 'nb_seg',  100?
# line 42: 'n', same as step1.
# line 43: 'mac', same as step1.
# line44: 'mac_ld', same as step1. 
  python2 ./step2.Somename.py

#	TO accelerate, parallelize in several scripts but with different 'outfile_name'.  

#3. step3: Perform abc estimation.
#   Working folder should contain 'estim' folder

#	Chnage generation time: estim/generations.R or maybe overwrite the value(done below). 

	ln -s $popsizeBinFolder/estim ./
	cp $popsizeBinFolder/estim/abc_ex1.R ./step3.Somename.R
#	Change values for: 
#		line 7: 'infile_params', generated by step2
#		line 8: 'infile_stat',  generated by step2
#		line 9: 'n', same as step1
#		line 10: 'mac', same as step1
#		line 14: 'infile_obs',  generated by step1
#		line 25: 'tol', 
#		line 30: 'pdf output name', 
#		line 45: 'file'
#		line 5: redefine the variable: gen_time=7.5
#		line 47: insert as below to output medians, remember to change the output_file_name.txt below:
#			write.table(data.frame(years=years,abc_estim=abc_estim[-1]),'output_file_name.txt',sep="\t", quote=FALSE, col.names = T, row.names = F) 

/home/quinn/programs/R/R-3.6.3/bin/R -f ./step3.Somename.R

#4. Test the expected accuracy of ABC estimation
#   Same working folder as step3.

	cp $popsizeBinFolder/estim/abc_cv_ex1.R ./step4.Somename.R
#	Chnage values for:
#		line 9: 'infile_params'
#		line 10: 'infile_stat'
#		line 11: 'n'
#		line 12: 'mac'
#		line 23: 'tols'
#		line 29: 'pdf output name'

/home/quinn/programs/R/R-3.6.3/bin/R -f ./step4.Somename.R

#5. plot all pops together. 

	Rscript /home/users/long/Wildebeest/PopsizeABC/bin/popsizeABC.multipop.plot.R pops_seperated_by_comma medianFiles_seperated_by_comma colors_seperated_by_comma output.pdf

#An example: Rscript bin/popsizeABC.multipop.plot.R 'WWB (n=27),B1 (n=11),BLACK (n=9)' wwb.abc.est.txt,b1.abc.est.txt,black.abc.est.txt red,blue,black test.pdf







